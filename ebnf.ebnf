grammar = { rule } ;

rule = name, "=", expression, ";" ;

name = name_start_character, { name_character } ;

name_start_character = letter | digit | "_" ;
name_character = name_start_character | "-" ;
letter = "a".."z" | "A".."Z" ;
digit = "0".."9" ;

expression = name | literal | special | group | repetition | alternation | concatenation | range ;

literal = ( '"', ? any character ? - '"', '"' ) | ( "'", ? any character ? - "'", "'" ) ;
special = "?", ? any character ? - "?", "?" ;

group = "(", expression, ")" ;
repetition = "{", expression, "}" ;
alternation = expression, "|", expression ; concatenation = expression, ",", expression ; range = literal, "..", literal ;
